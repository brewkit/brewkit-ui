@use "../utilities";


$snackColors: primary, secondary, success, warning, danger, info, dark, light;

// ======================================
// Snackbar Wrapper Positioning
// ======================================

.brew-Snackbar {
    position: fixed;
    top: 0;
    left: 0;
    z-index: 1;
    pointer-events: none;

    &--topLeft,
    &--topCenter,
    &--topRight,
    &--centerLeft,
    &--centerRight,
    &--bottomLeft,
    &--bottomCenter,
    &--bottomRight {
        display: grid;
        grid-gap: size(normal);
        position: absolute;
        padding: size(xx-large);
        pointer-events: none;
        max-width: 568px;
        z-index: 2;
    }

    &--topLeft {
        top: 0;
        left: 0;
        align-items: flex-start;
    }

    &--topCenter {
        top: 0;
        left: 50%;
        transform: translateX(-50%);
    }

    &--topRight {
        top: 0;
        right: 0;
        align-items: flex-end;
    }

    &--centerLeft {
        top: 50%;
        left: 0;
        transform: translateY(-50%);
    }

    &--centerRight {
        top: 50%;
        right: 0;
        transform: translateY(-50%);
    }

    &--bottomLeft {
        bottom: 0;
        left: 0;
    }

    &--bottomCenter {
        bottom: 0;
        left: 50%;
        transform: translateX(-50%);
    }

    &--bottomRight {
        bottom: 0;
        right: 0;
    }

}

// ======================================
// Snackbar Content
// ======================================

.brew-SnackbarItem {
    display: grid;
    grid-template-columns: min-content 1fr max-content;
    grid-template-areas: "icon content button";
    position: relative;
    align-items: center;
    min-width: 288px;
    max-width: 568px;
    padding: size(normal);
    pointer-events: auto;
    border-radius: $border-radius;

    &--topLeft,
    &--topCenter,
    &--topRight {
        animation: slide .35s;
    }

    &__button {
        grid-area: button;
    }

    &__close {
        position: absolute;
        top: size(xx-small);
        right: size(x-small);
        cursor: pointer;
    }

    &__content {
        grid-area: content;
    }

    &__icon {
        margin-right: size(normal);
        grid-area: icon;
    }

    // ======================================
    // Colors
    // ======================================

    @each $color in $snackColors {
        &--#{$color} {

            @if $color == 'primary' or $color == 'secondary' {
                background-color: color(brand, $color);
                color: set-text-color(color(brand, $color));
            } @else {
                background-color: color(accent, $color);
                color: set-text-color(color(accent, $color));
            }
        }
    }
}


@keyframes slide {
    0% { transform: translateY(-100%)}
    100% { transform: translateY(0);}
}
